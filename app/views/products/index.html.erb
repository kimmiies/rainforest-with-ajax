<h1>Products</h1>

<%= form_tag products_path, method: :get, authentication: false, id: 'search-form' do %>
  <%= text_field_tag :search, params[:search] %>
  <%= submit_tag "Search" %>
<% end %>


<div id="products">
  <%= render @products %>
</div>

<!-- originally go to the index page you need to see the products -->
<!-- document.getElementByID('products') selects this and replaces with what the response provides. which is new HTML, found in controller .. links to partial -->

<script type="text/javascript">
  function display_search_results(){
    // readyState===4 means request completed successfully
    if (this.readyState === 4) {
      console.log(this);
      document.getElementById('products').innerHTML = this.responseText;
    }
  }

var form = document.getElementById('search-form');

form.addEventListener('submit', function(event){
  event.preventDefault();

  var searchValue = document.getElementById('search').value;

  var xhr = new XMLHttpRequest();
  xhr.onload = display_search_results;
  xhr.open('GET', '/products?search=' + searchValue, true);
  xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
  xhr.send();
});
</script>














<!-- this will take it and loop though  -->
<!-- render all products. and i know you have a partial for each individual item
for each instance of a product it render that partial (view)-->


<!--by default forms are posts so you have to override it   -->
